name: .NET DLL Build & Release

on:
  push:
    branches: [ "feat/workflows_build"]
  pull_request:
    branches: [ "feat/workflows_build"]

env:
  PROJECT_NAME: ProofAcidFireCold
  SOLUTION_FILE: ProofAcidFireCold.sln
  PROJECT_PATH: ProofAcidFireCold.csproj
  DOTNET_VERSION: '4.6.2'
  BUILD_CONFIGURATION: Release

jobs:
  build-and-pack:
    runs-on: windows-latest
    
    strategy:
      matrix:
        configuration: [Release]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version from package.xml
      id: version
      run: |
        echo "::set-output name=version::$(grep -o '<version>[^<]*' package.xml | sed 's/<version>//')"

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Build solution
      run: msbuild ${{ env.SOLUTION_FILE }} /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:Platform="Any CPU" /p:TargetFrameworkVersion=v${{ env.DOTNET_VERSION }}

    - name: Publish Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-${{ steps.version.outputs.version }}
        path: bin/${{ env.BUILD_CONFIGURATION }}/

  release:
    needs: build-and-pack
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-${{ needs.build-and-pack.outputs.version }}

    - name: Unzip Artifact
      run: |
        mkdir -p bin/${{ env.BUILD_CONFIGURATION }}
        unzip -qq ${{ github.workspace }}/${{ env.PROJECT_NAME }}-${{ needs.build-and-pack.outputs.version }}.zip -d bin/${{ env.BUILD_CONFIGURATION }}

    - name: Upload release
      uses: softprops/action-gh-release@v2
      with:
        files: bin/${{ env.BUILD_CONFIGURATION }}/*
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ needs.build-and-pack.outputs.version }}
        release_name: ${{ needs.build-and-pack.outputs.version }}
        body: ${{ needs.build-and-pack.outputs.version }}
        draft: true